{"version":3,"sources":["Components/AddPokemon.js","helpers/getPokemon.js","Components/PokemonGridItem.js","Components/PokemonGrid.js","hooks/useFetchPokemon.js","Components/Form.js","App.js","index.js"],"names":["AddPokemon","setPokemon","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","pokemon","toLowerCase","type","value","onChange","target","getPokemon","a","url","encodeURI","fetch","resp","json","name","image","sprites","poke","front_default","PokemonGridItem","title","className","src","alt","PokemonGrid","data","loading","state","setState","useEffect","then","imgs","useFetchPokemon","images","Form","map","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAGaA,EAAa,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EAELC,mBAAS,IAFJ,mBAEjCC,EAFiC,KAErBC,EAFqB,KAexC,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAW,SAAAS,GAAO,OAAKP,EAAWQ,eAAhB,mBAAiCD,OACnDN,EAAc,OAMd,2BACIQ,KAAK,OACLC,MAAOV,EACPW,SAhBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,Y,uBCRlBG,EAAU,uCAAG,WAAMN,GAAN,yBAAAO,EAAA,6DAGhBC,EAHgB,4CAG2BC,UAAUT,IAHrC,SAKHU,MAAMF,GALH,cAKhBG,EALgB,gBAMaA,EAAKC,OANlB,uBAMfC,EANe,EAMfA,KAAaC,EANE,EAMVC,QAGNC,EAAO,CACLH,KAAMA,EACNC,MAAK,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAOG,eAXA,kBAcfD,GAde,4CAAH,sDCEVE,EAAkB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOX,EAAU,EAAVA,IAGrC,OAEI,yBAAKY,UAAU,2CAEX,yBAAKC,IAAKb,EAAKc,IAAKH,IAEpB,wBAAIC,UAAU,sCAAsCD,KCRnDI,EAAc,SAAC,GAAiB,IAAD,ECCb,SAACvB,GAAa,IAAD,EAEdR,mBAAS,CAC/BgC,KAAM,GACNC,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACPtB,EAAWN,GACN6B,MAAM,SAAAC,GACHH,EAAS,CACLH,KAAMM,EACNL,SAAS,SAGtB,CAACzB,IAEI0B,EDhB0BK,CAFM,EAAd/B,SAEZgC,EAF0B,EAEhCR,KAAcC,EAFkB,EAElBA,QACtB,OACI,oCACKA,GAAW,uBAAGL,UAAU,qCAAb,WACZ,yBAAKA,UAAU,aACX,kBAAC,EAAD,CAAiBD,MAAOa,EAAOnB,KAAML,IAAKwB,EAAOlB,WEgBlDmB,MAvBf,WAAiB,IAAD,EAEgBzC,mBAAS,CAAC,YAF1B,mBAELQ,EAFK,KAEIT,EAFJ,KAIZ,OACI,oCACI,yBAAK6B,UAAU,aAAf,WACA,kBAAC,EAAD,CAAY7B,WAAYA,IACxB,6BACA,4BAEQS,EAAQkC,KAAI,SAAClC,GAAD,OACR,kBAAC,EAAD,CACImC,IAAOnC,EACPA,QAAWA,UCLxBoC,MARf,WACE,OACE,oCACE,kBAAC,EAAD,QCFNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.deeba35e.chunk.js","sourcesContent":["import React, { useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddPokemon = ({setPokemon}) => {\r\n\r\n    const [inputValue, setInputValue]= useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setPokemon(pokemon => [inputValue.toLowerCase(),...pokemon]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange = {handleInputChange}\r\n            /> \r\n        </form>\r\n    )\r\n\r\n    \r\n}\r\nAddPokemon.propTypes = {\r\n    setPokemon : PropTypes.func.isRequired\r\n}\r\n","export const getPokemon = async(pokemon) => {\r\n\r\n\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${encodeURI(pokemon)}`;\r\n    \r\n    const resp = await fetch(url);\r\n    const {name,sprites:image} = await resp.json();\r\n   \r\n\r\n    const poke = {\r\n            name: name,\r\n            image: image?.front_default\r\n    }\r\n    //console.log(poke);\r\n    return poke;\r\n}\r\n","import React from 'react'\r\n\r\nexport const PokemonGridItem = ({ title, url }) => {\r\n    \r\n    \r\n    return (\r\n\r\n        <div className='card animate__bounceOut animate__fadeIn'>\r\n\r\n            <img src={url} alt={title} />\r\n\r\n            <h4 className=\"animate__bounceOut animate__fadeIn\">{title}</h4>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchPokemon } from '../hooks/useFetchPokemon'\r\nimport { PokemonGridItem } from './PokemonGridItem'\r\nexport const PokemonGrid = ({ pokemon }) => {\r\n\r\n    const { data: images, loading } = useFetchPokemon(pokemon);\r\n    return (\r\n        <>\r\n            {loading && <p className=\"animate__bounceOut animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                <PokemonGridItem title={images.name} url={images.image}/>                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport {getPokemon} from '../helpers/getPokemon'\r\n\r\n\r\nexport const useFetchPokemon = (pokemon) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n        getPokemon(pokemon)\r\n            .then( imgs =>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [pokemon]);\r\n   // console.log(state);\r\n    return (state);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddPokemon } from './AddPokemon';\r\nimport { PokemonGrid} from './PokemonGrid'\r\nfunction Form() {\r\n    \r\n    const [pokemon, setPokemon]=useState(['pikachu']); \r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">POKEDEX</div>\r\n            <AddPokemon setPokemon={setPokemon}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    pokemon.map((pokemon)=>( \r\n                        <PokemonGrid \r\n                            key = {pokemon} \r\n                            pokemon = {pokemon}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\nimport './App.css';\nimport Form from './Components/Form';\n\nfunction App() {\n  return (\n    <>\n      <Form />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}